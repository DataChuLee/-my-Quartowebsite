---
title: Lecture 12
date: '2023-01-12'
description: '데이터 프레임(Data Frame)'
execute: 
  message: false
  warning: false
editor_options: 
  chunk_output_type: console
---

### 차례

-   데이터 프레임(Data Frame)

    -   변환

-   Data Frame 만들기

-   indexing

-   pre - allocate

1.  **데이터 프레임(Data Frame)**

-   SQL의 table = R의 Data Frame

-   list의 모임이며, 하나의 list가 열(column)이다.

-   같은 열끼리는 같은 type 이어야 한다.

-   제약 조건: 원소의 길이가 같아야한다.

-   변환

    -   Vector --\> factor : 벡터의 특별한 형태

    -   Array --\> matrix

    -   list --\> data.frame : list의 특별한 형태

    -   list는 각각의 원소들의 type이 같은 필요가 없다.

    -   data.frame은 각각의 원소들의 type이 같아야한다. (column별)

        -   그래서 특별한 형태라는 것!!

    -   list는 vector, factor, array, matrix, list, data.frame 가능!

2.  **data.frame 만들기**

`data.frame(열이름1=원소, 열이름2=원소2,….)`

```{r}
# 데이터 프레임 만들때 열의 이름과 원소 같이 생성하는 경우
df <- data.frame(x =1:3, y =c('a','b','c'), z=3*1:3)
df

x <- 4:6
y <- letters[x]
y
z <- 3*x
z

# 데이터 프레임 만들기 전에 먼저 열들의 변수를 만든 후 데이터 프레임을 생성하는 경우
df2 <-data.frame(x,y,z) 
df2

```

3.  **indexing**

-   **list index : class의 변화에 대해 주목!**

**data.frame의 indexing에는 list index 방법과 matrix index 방법이 존재한다.**

**두 개의 index에는 차이가 존재한다. 차이는 밑의 코드를 보면서 알 수 있을 것이다.**

```{r}
df

l.df <- df[[1]]
l.df
class(l.df) # vector 


l.df2 <- df[1]
l.df2
class(l.df2) # data.frame 형태로 출력된다. 


l.df3 <- df['x'] 
l.df3
class(l.df3) # data.frame 형태로 출력된다. 


l.df4 <- df[c(1,3)]
l.df4
class(l.df4) # data.frame 형태로 출력된다. 
```

-   matrix index : \[행,열\]

```{r}
df

m.df <- df[1,1] #1행 1열
m.df
class(m.df) # 1이라는 interger 출력 

m.df2 <- df[,1] # 1열 추출
m.df2
class(m.df2) # 숫자형 벡터 출력

m.df3 <- df[,2] # 2열 추출 
m.df3
class(m.df3) # 문자형 벡터 출력

m.df4 <- df[,-3] # 1,2열 추출 
m.df4
class(m.df4) # data.frame 추출

m.df5 <- df[1:2,] # 1,2행 추출
m.df5
class(m.df5) # data.frame 추출
```

4.  **pre - allocate : 미리 공간만들어서 그 곳에 원소 넣기**

```{r}
n <- 3

df <- data.frame(x = numeric(n), y = character(n), z = 0)
df

## list index 방법 
df[[1]] <- 1:3 # 1열의 원소에 1:3이라는 숫자형 벡터 기입
df 

# 2열의 원소에는 내장 데이터 letter을 이용하여 a b c 기입
df[[2]] <- letters[df[[1]]] 
df$y <- letters[df[[1]]] # 위 코드와 동일한 의미
df


## matrix index 방법 
# 3열은 1열의 숫자형 벡터의 3배수
df[,3] <- 3*df[[1]]
df
```
