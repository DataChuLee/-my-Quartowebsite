---
title: Lecture 5 
subtitle: vector(1):숫자형, 문자형 벡터 생성 및 seq()함수, rep()함수 
---

### 차례

-   벡터

<!-- -->

    -   숫자형 벡터

    -   문자형 벡터

-   c( ) : 벡터 생성

-   seq(시작, 끝, 증가량)

-   rep(반복할 숫자, 반복 횟수)

-   paste(문자1, 문자2, sep)

-   Logistic vector

1.  **Vector(벡터)**

    R에서는 길이 1의 벡터(스칼라)

    실제로는 세로이지만, 프로그램상 가로로 보이는 것뿐이다.

2.  **벡터생성 : c( )**

```{r}
x <- c(1,2,3)
x

a <- c(x,4,5)
a

# 문자형은 따옴표("",'')를 사용하여 벡터를 생성한다.
y <- c("a","b","c")
y
```

-   벡터의 원소는 같은 자료형만 허용

    -   벡터는 숫자 or 문자형만 있어야한다. (숫자, 문자 같이 허용 안된다)

    -   숫자와 문자형이 같이 있는 벡터를 생성할 경우 모두 문자형으로 표현된다.

```{r}
x <- c(1,2,"대한민국")
x # 숫자인 1과 2도 문자형으로 표현되는 것을 알 수 있다.
```

3.  **sequence(시작, 끝, 증가량)**

숫자형 벡터에서만 사용된다.

증가량의 default 값은 1이다.

```{r}
x <- seq(0,10) # 0부터 10까지의 연속된 수의 배열. 즉, 수열이 형성
x 

x <- seq(0,10,2) # 0부터 10까지 짝수로만 이루어진 수열이다. 공차가 2 
x

x <- seq(1,10,2) # 홀수로 이루어진 수열
x

# 시작: 끝 (무조건 1씩 증가하는 수열이다)
1:10
y <- 10:1 # 시작을 끝보다 큰 수로 잡으면 감소하는 수열이 형성된다.
y 

c <- 25:35 # 시작이 25 끝 35까지 1씩 증가하는 수열
c
```

4.  **rep(반복할 숫자, 반복 횟수)**

    ```{r}
    rep(1,3) # 1을 3번 반복해줘!

    rep(seq(1,3),2) # 1,2,3을 2번 반복해줘! 
    rep(1:3,2) # 위와 같은 의미의 코드 

    rep("git",2)
    rep(c("g","i","t"),2)
    ```

5.  **paste(문자1, 문자2, sep)**

문자형 벡터에서 사용한다. 문자끼리 연결해주는 함수

-   sep : 문자간의 공간을 어떻게 할 건지 결정해준다.

```{r}
paste("git","hub") # sep 인자의 default 값은 한칸 띄어쓰기이다. 
paste("git","hub",sep =" ") # 위와 같은 의미의 코드이다 
paste("git","hub",sep ="") # sep = "" 
paste("git","hub",sep ="*")
paste("git","hub",sep ="//")

paste(rep("X",5),1:5, sep = "")
date()
paste("Today is",date())
paste("대한민국","2023년 기준", "축구순위는 25위이다")
```

6.  **Logistic vector**

    TRUE, FALSE 로 이루어진 벡터이다. 파이썬에서는 논리값벡터를 불린 값으로 불린다.

```{r}
100 > 95
3>5
a <- 3
b <- 1+2
a == b # R에서는 좌변과 우변이 같다라는 의미를 '=='로 표현한다.
a != b # '!=' 는 not 을 의미한다.

a <- c(1,2,3)
a == 1

a <- c("x1","x2","x3")
a == "x3" 
```
