---
title: Lecture 1 
subtitle: Data 구조
---

Lecture 1 시간에는 데이터의 전반적인 구조에 대해서 알아볼 것입니다.

1.  데이터 구조

    -   벡터 : 1가지 데이터 유형으로 구성된 1차원 구조의 data

    -   행렬 : 1가지 데이터 유형으로 구성된 2차원 구조의 data

    -   배열 : 행렬을 n차원으로 확대한 구조의 data

    -   리스트 : 여러 data 유형으로 구성된 1차원 구조의 data

    -   테이터 프레임 : 리스트를 2차원으로 확대한 구조의 data

2.  데이터 유형

<!-- -->

    -   숫자형 (numberic) :

    -   문자형 (character) :

    -   논리형 (logical) : TRUE 또는 FALSE 으로 이루어진 data

3.  데이터 유형

    -   단일형 데이터 : 숫자형 또는 문자형과 같이 한가지 데이터 유형으로 만 구성된 data(벡터, 행렬, 배열)

    <!-- -->

    -   다중형 데이터 : 숫자형 또는 문자형 데이터 등 여러가지 데이터 유형으로 구성된 data (리스트, 데이터 프레임)

4.  차원에 의한 분류

    -   1차원 데이터 : 1개의 정보

    -   2차원 데이터 : 2개의 정보

    -   3차원 데이터 : 3개의 정보

    -   n차원 데이터 : n개의 정보

-   1차원 + 단일형 --\> 벡터

-   2차원 + 단일형 -\> 행렬

-   n차원 + 단일형 -\> 배열

-   1차원 + 다중형 -\> 리스트

-   2차원 + 다중형 -\> 데이터 프레임

5.  숫자형 벡터 : numberic vertor - 실수형 벡터(double) : 정수(양수, 음수), 유리수, 무리수

<!-- -->

    -   정수형 벡터(integer vector)

수치형 벡터는 숫자 값으로 된 벡터다. 스칼라 값은 가장 단순한 수치형 벡터이다.

코드로 예를 들어서 이해해보자!

```{r}
ex1 <- c(1,2,3)
ex1
mode(ex1) # mode(): 데이터 유형을 확인하는 함수 

str(ex1) # str(): 데이터 유형과 값을 확인하는 함수 

length(ex1) # length(): 데이터 길이를 확인하는 함수 

typeof(ex1) # typeof(): 데이터 유형이 numberic 이라면, integer 인지 double 인지 알려주는 함수/ 즉, mode()함수보다 더 구체적으로 데이터의 유형을 알려주는 함수라고 할 수 있다.  


```

6.  문자형 벡터 : charater vector

<!-- -->

    문자형 벡터는 말 그대로 문자열로 된 집합이다. 여기서 문자열은 개별적인 문자 또는 기호가 아니라 this is a string 같은 문자의 집합을 의미한다. 문자형 벡터를 만드는 데 큰따옴표와 작은따옴표를 모두 사용할 수 있다.

```{r}
ex2 <- c("dog","tiger")

ex2

ex3 <- c("1","2","3")

ex3

mode(ex2) 

str(ex2)

mode(ex3)

str(ex3)

```

7.  논리형 벡터

<!-- -->

    수치형 벡터와 달리 논리형 벡터는 TRUE 또는 FALSE 값의 집합이다. 이는 기본적으로 논리형 질문에 대한 참/거짓의 답을 의미한다.

    가장 간단한 논리형 벡터는 TRUE 아니면 FALSE 그 자체다.

```{r}
ex4 <- c(TRUE,FALSE) 

ex4

mode(ex4)

str(ex4)

remove(ex4) # 데이터 세트 삭제하기 -> remove() / rm()
```
