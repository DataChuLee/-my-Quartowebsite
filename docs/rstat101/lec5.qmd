---
title: Lecture 6
subtitle: vector(2):index,pre-allocate,벡터끼리 계산, 정규분포 만들기
---

1.  **index: \[ \] 사용**

-   **index : 위치, 순서를 의미한다.**

```{r}
x <- 1:10
x

y <- rep(c(T,F),5)
y

# TRUE만 출력
x[y]

y2 <- rep(c(F,F,F,F,T),2)
y2
x[y2]
```

-   Q\) 3의 배수 찾기

```{r}
a <- 1:30
b <- a %% 3 # a벡터를 3으로 나눈 나머지를 의미하는 코드이다.  
b

# 3의 배수는 3으로 나누었을 때 나머지가 0이다.
b == 0
a[b == 0] # 3의 배수 
```

-   양의 정수 index 사용

```{r}
x  <- 15:25
x 
x [0] # R이라는 프로그램은 1번째부터 위치가 시작하지만, Python에서는  0번째부터 시작한다. 이 점을 유의해야한다.  
x [1] # 1번째 index 
x [2] # 2번째 index
length(x) # x벡터의 원소의 개수
x[11] # 마지막 원소의 위치

x[c(1,2)] # 1,2번째 index
x[c(2,4)] # 2,4번째 index
x[c(8:10)] # 8~10번째 index
```

2.  **공간확보(pre-allocate)**

벡터를 먼저 만들고 인덱스를 이용하여 원소를 대입

```{r}
v <- rep(NA,3) # 현재 logical mode이므로 숫자형 데이터를 추가하기 위해서는 형태를 전환시켜야한다. 

v <- as.numeric(v)
mode(v)

v[1] <- 1 # v벡터의 1번째 원소를 1로 대입
v

v[2] <- 2
v

v[3] <- 3

# 위의 코드를 하나의 코드로 만들면? 
v[c(1:3)] <- c(1,2,3)
v
```

-   **벡터 이름 부여하기**

```{r}
v

names(v) <- c("R","Markdown","Quarto")
v
```

3.  **벡터끼리 계산**

```{r}
a <- 1:5 
a

a+5 # a벡터의 모든 원소에 5가 더해진다. 
a*3 # 3이 곱해진다.
a/5 # 5가 나뉘어진다.

# 루트(root)
# R에서는 root를 사용하려면 sqrt()라는 함수를 사용해여한다. 
sqrt(a) 
b <- c(1,4,9,16,25)
sqrt(b)

# 평균(mean) 
a
mean(a)

b
mean(b)

# 총합(sum)
sum(a)
sum(b)

# 같은 위치끼리 계산된다. 
a <- 1:3
b <- 4:6
c <- 7:10

a+b
a-b
a*b
a/b

# 원소의 개수가 안맞은 벡터와 사칙연산을 할 경우 다음과 같은 에러가 뜨면서 Recycling rule에 의해서 1+10 = 11이 마지막원소로 나오게 된다.
a+c 

```

4.  **정규분포 만들기**

::: callout-note
## 정규분포

편차 / 표준편차

\[자료- 평균(자료)\] / 표준편차(자료)
:::

```{r}
n <- 1:5
mean(n)

z <- (n-mean(n))/sd(n) # z는 정규분포
z 
mean(z) # 정규분포의 평균은 0
var(z) # 정규분포의 분산은 1이다.
```
