{
  "hash": "78e174e51d34ef3327284cd6b3997cf7",
  "result": {
    "markdown": "---\ntitle: Qmd 작성법  \nsubtitle: Quarto로 포스팅을 할 때 문법\ndescription: |\n  Qmd의 모든 것! \ncategories:\n  - Quarto\n  - Authoring\nauthor: 슬기로운통계생활\ndate: 12/30/2022\nimage: coding.jpg\nimage-alt: \"코딩하는 그림 이미지 입니다.\"\n---\n\n\n## 가장 중요한 단축키\n\nVisual editor에서 사용하는 모든 기능을 찾을 수 있는 검색 단축키 `Ctrl + /`\n\n는 무조건 알고 있어야 한다.\n\n## 글자 서식 방법\n\n글자를 굵게 표현 : **Ctrl + B**\n\n글자를 기울게 표현 : *Ctrl + B*\n\n글자 스트록 넣기 : 문자를 물결 두개 (\\~\\~) 양쪽에 감싸주기! ~~테스트~~\n\n위첨자: 문자를 꺾쇠(\\^) 감싸주기! (테스트^위첨자^)\n\n아래첨자: 문자,를 물결 한개(\\~) 양쪽에 감싸주기! (테스트~아래첨자)~\n\n인라인 코드 넣기(문서 안에 코드 폰트로 넣기) : `Ctrl+D`\n\n## 각종 제목 넣기\n\n`Ctrl + / 를 사용해서 H1 ~ H6 까지 찾아서 쓰자!`\n\n## 링크 넣는 법!\n\nQmd에서 바로 작업시에는 대괄호 안에 표현될 글자, 중괄호 안에 연결할 링크를 넣어야 하지만, Visual Editor에서는 작동하지 않는다.\n\n\\[Quarto\\](https://quarto.org)\n\nVisual Editor 단축키 : Ctrl + K\n\n[Quarto](https://quarto.org)\n\n## 이미지 넣는 법!\n\n에디터 위쪽 그림버튼 클릭! or Ctrl + / 로 검색\n\n![코딩하는 그림](/docs/blog/posts/2022-12-29-mysecond-post/coding.jpg){fig-align=\"left\" width=\"374\"}\n\n크기 조정하는 방법은 일단 삽입 후 점 버튼을 눌러 볼 것!\n\n## 리스트 만들기\n\n방법1. 위쪽 버튼 클릭 혹은 Ctrl + / 검색하기!\n\n방법2. 그냥 별표(\\*) 누르고 한 칸 공백 삽입 or 1. 입력 후 한칸 공백을 삽입하면 자동으로 리스트 작성모드로 들어감.\n\nI.  테스트\\\n    1.  테스트\\\n    2.  test\nII. 테스트\\\n    1.  test1\\\n    2.  테스트\n\nordered 리스트 삽입 후 점 세개 버튼을 클릭하면, 기존의 리스팅 번호를 바꿀 수 있다!\n\n## \n\n## 테이블 입력하기\n\nVisual editor 테이블 기능 사용하면 됨. (위쪽 table) 클릭!\n\n| Col1 | Col2 | Col3 |\n|------|------|------|\n|      |      |      |\n|      |      |      |\n|      |      |      |\n\n: table test\n\n## 코드 블록 넣기\n\n코드 블록을 그냥 코드만 넣는 기능! 언어를 선택할 시 그에 맞는 하이라이팅 기능 제공.\n\nCtrl + / 검색으로 Code block 넣기 선택!\n\n## 수식 입력 기능\n\n기본적인 수식 입력은 Ctrl + /로 inline math 혹은 display math 선택\n\n커스텀 LaTex 코드를 입력하고 싶은 경우, 따로 def을 사용하여 설정 할 수 있다.\n\n커스텀 코드는 보여주고 싶지 않으므로 다음과 같이 .hidden 으로 감싸줌\n\n위와 같이 입력해놓으면 새로운 Latex 코드인 `\\RR` 함수를 사용 할 수 있다.\n\n-   `\\RR` -\\> R\n\n## Flow 차트 그리기!\n\nmermaid 앱을 사용하여 flow chart 그리는 것을 지원해 줌! 주의할 점은 Rcode 청크를 먼저 입력한 후에, {r} 부분을 {mermaid} 바꿔주면 됨.\n\n아래와 같은 mermaid 코드는\n\n``` mermaid\nflowchart LR\n  A[qmd] --> B(Pandoc)\n  B --> C{Kniting}\n  C --> D[Word]\n  C --> E[HTML]\n  C --> F[PDF]\n```\n\n-   flowchart LR는 왼쪽에서 오른쪽으로 가는 flow chart를 의미\n\n-   대괄호 (사각형 엣지) / 중괄호(마름모) / 괄호(둥근 엣지)를 `의미`\n\n-   `%%| echo: true` 옵션으로 코드 에코 지원한다.\n\n-   실행언어를 mermaid로 설정\n\n다음과 같은 flow chart를 생성해낸다.\n\n\n```{mermaid}\n%%| echo: true \nflowchart LR\n  A(Qmd)--> B[Pandoc]\n  B --> C{Kniting}\n  C --> D[Word]\n  C --> E[HTML]\n  C --> F[PDF]\n```\n\n\n엄청 많은 템플릿을 지원하므로, [mermaid 홈페이지](https://mermaid.js.org/intro/)를 참고하자자\n\n## 순서도 넣기\n\nsequenceDiagram 예제\n\n``` mermaid\n%%| echo: true \nsequenceDiagram\n  participant Alice\n  participant Bob\n  Alice->>John: Hello John, how are you?\n  loop Healthcheck\n    John->>John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts <br/>prevail!\n  John-->>Alice: Great!\n  John->>Bob: How about you?\n  Bob-->>John: Jolly good!\n```\n\n\n```{mermaid}\n%%| echo: true \nsequenceDiagram\n  participant Alice\n  participant Bob\n  Alice->>John: Hello John, how are you?\n  loop Healthcheck\n    John->>John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts <br/>prevail!\n  John-->>Alice: Great!\n  John->>Bob: How about you?\n  Bob-->>John: Jolly good!\n```\n\n\n## Graphviz\n\nGraphviz의 경우 `//| echo: true` 옵션을 사용하여 코드 에코 기능을 사용 할 수 있다. 다음과 같은 코드는 네트워크 관계도를 만들어 준다.\n\n-   실행 언어를 dot으로 설정\n\n```` dot\n```{dot}\ngraph G {\n  layout=neato\n  run -- intr;\n  intr -- runbl;\n  runbl -- run;\n  run -- kernel;\n  kernel -- zombie;\n  kernel -- sleep;\n  kernel -- runmem;\n  sleep -- swap;\n  swap -- runswap;\n  runswap -- new;\n  runswap -- runmem;\n  new -- runmem;\n  sleep -- runmem;\n}\n```\n````\n\n\n```{dot}\ngraph G {\n  layout=neato\n  run -- intr;\n  intr -- runbl;\n  runbl -- run;\n  run -- kernel;\n  kernel -- zombie;\n  kernel -- sleep;\n  kernel -- runmem;\n  sleep -- swap;\n  swap -- runswap;\n  runswap -- new;\n  runswap -- runmem;\n  new -- runmem;\n  sleep -- runmem;\n}\n```\n\n\n## 콤마 세개 연산자\n\n::: 를 사용하면 HTML 언어에서의 div를 설정할 수 있음. 이러한 기능은 원하는 css를 원하는 부분에 적용할 수 있도록 도와준다.\n\n-   사용 예: border css를 적용\n\n<!-- -->\n\n    ::: {.border}\n    이 문장을 사각형으로 둘러싸줍니다.\n    :::\n\n::: border\n이 문장을 사각형으로 둘러싸줍니다.\n:::\n\n-   사용 예 : callout-note class를 적용\n\n<!-- -->\n\n    ::: {.callout-note}\n    이 문장을 Note로 만들어 줍니다.\n    :::\n\nVisual editor에서는 `Ctrl + /` 를 사용해서 div를 선택 후, class에 `.callout-note`를 입력\n\n::: callout-note\n이 문장을 Note로 만들어 줍니다.\n:::\n\n## R 코드 청크 입력방법\n\n`#|` 를 사용해서 옵션 설정한다.\n\n설정할 수 있는 옵션들\n\n-   echo\n\n-   eval\n\n-   output\n\n-   include\n\n-   warning\n\n-   error\n\n위의 옵션들을 `true` 혹은 `false`로 설정할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(mtcars)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}