{
  "hash": "80b8d8a7b7851f7939107181bd5028fe",
  "result": {
    "markdown": "---\ntitle: Lecture 7 \nsubtitle: factor함수와 levels, order 옵션 \n---\n\n\n**차례**\n\n-   **factor( ): factor 생성**\n\n\n```{=html}\n<!-- -->\n```\n\n    -   **levels옵션, order 옵션**\n\n-   **as.factor( ) : factor로 변환**\n\n1.  factor( ): factor 생성\n\nfactor : 데이터가 범주형 자료일 때 사용한다. (ex: 남자,여자)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 문자형 벡터\nchr <- c('c','h','r')\nchr\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"c\" \"h\" \"r\"\n```\n:::\n\n```{.r .cell-code}\nclass(chr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n\n```{.r .cell-code}\n# factor \nfactor(chr) # 문자형 벡터가 범주형 자료로 변환된게 아니다!  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] c h r\nLevels: c h r\n```\n:::\n\n```{.r .cell-code}\nf <- factor(c('c','h','r'))\nf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] c h r\nLevels: c h r\n```\n:::\n\n```{.r .cell-code}\nclass(f)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"factor\"\n```\n:::\n\n```{.r .cell-code}\nf <- factor(c(1,2,3))\nf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3\nLevels: 1 2 3\n```\n:::\n\n```{.r .cell-code}\nclass(f)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"factor\"\n```\n:::\n:::\n\n\n-   levels 옵션 : level 순서 바꾸기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nf <- factor(c(1,2,3)) # level의 순서는 숫자형 벡터를 기입한 순으로 1,2,3 이다. \nf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3\nLevels: 1 2 3\n```\n:::\n\n```{.r .cell-code}\nlevels(f)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"1\" \"2\" \"3\"\n```\n:::\n\n```{.r .cell-code}\nf <- factor(f, levels = c(3,2,1)) # 하지만 levels 라는 인자를 활용하면 그 순서를 바꿀 수 있다. \nf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3\nLevels: 3 2 1\n```\n:::\n\n```{.r .cell-code}\nlevels(f)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"3\" \"2\" \"1\"\n```\n:::\n:::\n\n\n-   order 옵션 : level 순서 정하기\n\n    -   plot을 그릴 때 order 순서대로 그려진다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nf <- factor(c(1,2,3), levels = c(3,2,1), order = T)\nf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3\nLevels: 3 < 2 < 1\n```\n:::\n\n```{.r .cell-code}\nlevels(f)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"3\" \"2\" \"1\"\n```\n:::\n:::\n\n\n2.  as.factor( ) : factor로 변환\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchr <- c('s','t')\nclass(chr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n\n```{.r .cell-code}\n# factor()\nas.factor(chr) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] s t\nLevels: s t\n```\n:::\n\n```{.r .cell-code}\nclass(chr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n\n```{.r .cell-code}\n# factor로 변환\nchr <- as.factor(chr) # 자료변환을 하려면 변수에 할당해야한다!\nclass(chr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"factor\"\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}