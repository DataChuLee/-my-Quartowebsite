{
  "hash": "8d634391317da7127e82bc06fcebe7d7",
  "result": {
    "markdown": "---\ntitle: Lecture 13\ndate: '2023-01-15'\ndescription: 'if문, elseif문'\nexecute: \n  message: false\n  warning: false\neditor_options: \n  chunk_output_type: console\n---\n\n\n### 차례\n\n-   group expression : { }\n\n-   if 문\n\n    -   조건 2개, 조건 3개 이상\n\n-   elseif 문\n\n1.  **group expression : { }**\n\n-   **중괄호**{ } : 한 번에 명령 수행하고자 할 때 사용한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n{\n  a <- 1\n  b <- c(1,2,3)\n  a+b\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2 3 4\n```\n:::\n\n```{.r .cell-code}\n# 또 다른 예시(한 번에 명령 실행)\n# 개인적으로 중괄호 사용하는 것이 더 편하고 가독성이 좋다고 생각한다.\na <- 1 ; b <- c(1,2,3) ; a+b\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2 3 4\n```\n:::\n:::\n\n\n2.  **if문**\n\n**if (조건){성공 시 실행될 식} else {실패 시 실행될 식}**\n\n-   **조건 2개**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# %% : 나머지\nif (4 %% 2 ==0) \"짝수\" else \"홀수\"\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"짝수\"\n```\n:::\n\n```{.r .cell-code}\nif (5 %% 2 ==0) \"짝수\" else \"홀수\"\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"홀수\"\n```\n:::\n\n```{.r .cell-code}\nx <-20\nif (x %% 2 ==0) \"짝수\" else \"홀수\"\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"짝수\"\n```\n:::\n:::\n\n\n-   **조건 3개 이상 : if ( ){ } else if ( ) { } else{ }**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 100\nif (x %% 3 ==0) {\n  y <- \"3의 배수\"\n  print(y)\n  } else if (x %% 3 ==1){\n    y <- \"나머지 1\"\n    print(y)\n    } else {\n      y <- \"나머지 2\"\n      print(y)\n    }\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"나머지 1\"\n```\n:::\n\n```{.r .cell-code}\nx <- 101\nif (x %% 3 ==0){\n  y <- \"3의 배수\"\n  print(y)\n} else if (x %% 3 ==1){\n  y <- \"나머지 1\"\n  print(y)\n} else {\n  y <- \"나머지 2\"\n  print(y)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"나머지 2\"\n```\n:::\n\n```{.r .cell-code}\nx <- 102\nif (x %% 3 ==0){\n  y <- \"3의 배수\"\n  print(y)\n} else if (x %% 3 ==1){\n  y <- \"나머지 1\"\n  print(y)\n} else {\n  y <- \"나머지 2\"\n  print(y)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"3의 배수\"\n```\n:::\n:::\n\n\n3.  **ifelse(condition, expression1,expression2)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c(1,2,3,4,5)\nifelse(x %% 2 ==0, \"짝수\",\"홀수\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"홀수\" \"짝수\" \"홀수\" \"짝수\" \"홀수\"\n```\n:::\n:::\n\n\n4.  **실습(Feat. women data)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwomen\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   height weight\n1      58    115\n2      59    117\n3      60    120\n4      61    123\n5      62    126\n6      63    129\n7      64    132\n8      65    135\n9      66    139\n10     67    142\n11     68    146\n12     69    150\n13     70    154\n14     71    159\n15     72    164\n```\n:::\n\n```{.r .cell-code}\n# height 60미만: A\n# height 60~70 미만: B \n# height 70이상 : C\nifelse(women$height >= 70, 'C',\n       ifelse(women$height >= 60, 'B','A'))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"A\" \"A\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"B\" \"C\" \"C\" \"C\"\n```\n:::\n\n```{.r .cell-code}\n# 실제 데이터에는 반영되지 않았다.\nwomen \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   height weight\n1      58    115\n2      59    117\n3      60    120\n4      61    123\n5      62    126\n6      63    129\n7      64    132\n8      65    135\n9      66    139\n10     67    142\n11     68    146\n12     69    150\n13     70    154\n14     71    159\n15     72    164\n```\n:::\n\n```{.r .cell-code}\nwomen$height_rank <-ifelse(women$height >= 70, 'A',\n       ifelse(women$height >= 60, 'B','C'))\n\n# 변수에 할당을 해줘야 데이터에 반영되는 것을 알 수 있다. \nwomen  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   height weight height_rank\n1      58    115           C\n2      59    117           C\n3      60    120           B\n4      61    123           B\n5      62    126           B\n6      63    129           B\n7      64    132           B\n8      65    135           B\n9      66    139           B\n10     67    142           B\n11     68    146           B\n12     69    150           B\n13     70    154           A\n14     71    159           A\n15     72    164           A\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}