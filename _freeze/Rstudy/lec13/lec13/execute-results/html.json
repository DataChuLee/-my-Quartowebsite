{
  "hash": "f40f346d7edcc5429064f330c3880b46",
  "result": {
    "markdown": "---\ntitle: Lecture 13\ndate: '2023-01-15'\ndescription: '데이터 변환과 편집'\nexecute: \n  message: false\n  warning: false\neditor_options: \n  chunk_output_type: console\n---\n\n\n### 차례\n\n-   데이터 변환: dim( ) , unlist( )\n\n-   \\[\\] 와 \\[\\[ \\]\\]\n\n-   데이터 편집 : eidt( )\n\n1.  **데이터 변환: dim( )**\n\n-   **벡터 --\\> 메트릭스**\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 1:6\na\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3 4 5 6\n```\n:::\n\n```{.r .cell-code}\ndim(a) <- c(2,3) # 2행 3열로 만들기\na\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n```\n:::\n:::\n\n\n-   **메트릭스 --\\> 벡터**\n\n\n::: {.cell}\n\n```{.r .cell-code}\na \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n```\n:::\n\n```{.r .cell-code}\ndim(a) <- NULL # a는 2행 3열로 이루어진 행렬이였는데, 차원을 없앤 것.\n\na # 다시 벡터 형태로 돌아갔다. \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3 4 5 6\n```\n:::\n:::\n\n\n2.  **\\[\\] 와 \\[\\[\\]\\]**\n\n**women data(내장 데이터)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(women)\nstr(women)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t15 obs. of  2 variables:\n $ height: num  58 59 60 61 62 63 64 65 66 67 ...\n $ weight: num  115 117 120 123 126 129 132 135 139 142 ...\n```\n:::\n\n```{.r .cell-code}\n## [[]]:그 안의 값을 가지고 온다.\ncol1 <- women[[1]] \nstr(col1) # 숫자형 벡터로 출력된다.\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n num [1:15] 58 59 60 61 62 63 64 65 66 67 ...\n```\n:::\n\n```{.r .cell-code}\nmean(col1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 65\n```\n:::\n\n```{.r .cell-code}\n## [ ]:sub으로 가지고 온다. \ncol2 <- women[1]\nstr(col2) # data.frmae으로 출력 된다. \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t15 obs. of  1 variable:\n $ height: num  58 59 60 61 62 63 64 65 66 67 ...\n```\n:::\n\n```{.r .cell-code}\nmean(col2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n:::\n\n\n-   **unlist( ): vector로 만든다.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncol3 <- unlist(col2) # 구조가 data.frmae인 col2를 vector로 만들어 줘!\nstr(col3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Named num [1:15] 58 59 60 61 62 63 64 65 66 67 ...\n - attr(*, \"names\")= chr [1:15] \"height1\" \"height2\" \"height3\" \"height4\" ...\n```\n:::\n\n```{.r .cell-code}\nmean(col3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 65\n```\n:::\n:::\n\n\n3.  **데이터 편집: edit( )**\n\n-   직접 입력하여 데이터를 수정/편집 할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(women)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  height weight\n1     58    115\n2     59    117\n3     60    120\n4     61    123\n5     62    126\n6     63    129\n```\n:::\n\n```{.r .cell-code}\nedit(women)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   height weight\n1      58    115\n2      59    117\n3      60    120\n4      61    123\n5      62    126\n6      63    129\n7      64    132\n8      65    135\n9      66    139\n10     67    142\n11     68    146\n12     69    150\n13     70    154\n14     71    159\n15     72    164\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}