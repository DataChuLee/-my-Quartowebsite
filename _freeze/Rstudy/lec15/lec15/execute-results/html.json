{
  "hash": "a749554c54e05eb2c9223eb770ee28cc",
  "result": {
    "markdown": "---\ntitle: Lecture 14\ndate: '2023-01-15'\ndescription: 'for 문, while 문'\nexecute: \n  message: false\n  warning: false\neditor_options: \n  chunk_output_type: console\n---\n\n\n### 차례\n\n-   for 문\n\n-   while 문\n\n1.  **for 문**\n\n**for (name in vector) statement 1**\n\nname : 반복문에 사용할 변수 이름(보통 i 사용!) / 반드시 in 포함 해야된다.\n\nvector : 보통 index vector 사용한다.\n\nvector 대신 list 가능! -- but 구조가 복잡해서 보통 vector 사용한다.\n\n-   **짝수만 출력**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c(1,2,3,4,5,6,7,8,9,10)\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n:::\n\n```{.r .cell-code}\nlength(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n\n```{.r .cell-code}\nfor (i in 1:length(x)) {\n  if (x[i] %% 2 ==0)\n    print(i)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n[1] 4\n[1] 6\n[1] 8\n[1] 10\n```\n:::\n:::\n\n\n-   **짝수만 있는 벡터 만들기**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c(1,2,3,4,5,6,7,8,9,10)\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n:::\n\n```{.r .cell-code}\nlength(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n\n```{.r .cell-code}\nresult <- c()\nfor (i in 1:length(x)){\n  if (x[i] %% 2 ==0)\n    result <- c(result,x[i])\n}\nresult\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  2  4  6  8 10\n```\n:::\n:::\n\n\n-   **data.frame에 적용하기** : women 데이터\n\nheight가 평균보다 크면 A 아니면 B 표시하기 (새로운 열 생성)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwomen\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   height weight\n1      58    115\n2      59    117\n3      60    120\n4      61    123\n5      62    126\n6      63    129\n7      64    132\n8      65    135\n9      66    139\n10     67    142\n11     68    146\n12     69    150\n13     70    154\n14     71    159\n15     72    164\n```\n:::\n\n```{.r .cell-code}\nmean(women$height)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 65\n```\n:::\n\n```{.r .cell-code}\nnrow(women)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 15\n```\n:::\n\n```{.r .cell-code}\nwomen$height_rank <- \"\"\nwomen\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   height weight height_rank\n1      58    115            \n2      59    117            \n3      60    120            \n4      61    123            \n5      62    126            \n6      63    129            \n7      64    132            \n8      65    135            \n9      66    139            \n10     67    142            \n11     68    146            \n12     69    150            \n13     70    154            \n14     71    159            \n15     72    164            \n```\n:::\n\n```{.r .cell-code}\nfor (i in 1:nrow(women)){\n  if (women[i,1] > mean(women$height)){\n    women[i,3] <- 'A'\n  } else {\n    women[i,3] <- 'B'\n  }\n}\nwomen\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   height weight height_rank\n1      58    115           B\n2      59    117           B\n3      60    120           B\n4      61    123           B\n5      62    126           B\n6      63    129           B\n7      64    132           B\n8      65    135           B\n9      66    139           A\n10     67    142           A\n11     68    146           A\n12     69    150           A\n13     70    154           A\n14     71    159           A\n15     72    164           A\n```\n:::\n:::\n\n\n2.  **while 구문**\n\n초기값 설정(ex. i \\<-1)\n\nbreak: 종료 의미\n\n-   **5\\*4\\*3\\*2\\*1 표현하기**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ni <- 5\nx <- 1\nwhile (i > 0) {\n  x <- x * i\n  i <- i-1\n}\n```\n:::\n\n\n-   **2 + 3 + 4 + 5 표현하기**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ni <- 2\nx <- 0\nwhile(i <=5){\n  x <- x + i \n  i <- i + 1\n}\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 14\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}